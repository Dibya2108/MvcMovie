@model ViewModel.ShowTimeViewModel
@using Kendo.Mvc.UI
@using System.Web.Mvc
@{
    Layout = null;
    ViewBag.Title = "ManageShowTime";
}
<link href="~/assets4.1/libs/clockpicker/bootstrap-clockpicker.min.css" rel="stylesheet" type="text/css" />
<link href="~/assets4.1/libs/bootstrap-datepicker/css/bootstrap-datepicker.min.css" rel="stylesheet" type="text/css" />
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

<script>

    $(document).ready(function () {


        $('#datepickerStartGrid').datepicker({
            autoclose: true,
            todayHighlight: true,
        });

        $('#datepickerEndGrid').datepicker({
            autoclose: true,
            todayHighlight: true,
        });

        if ('@Model.StartDateString' != '') {

            var startDateNew = new Date('@Model.StartDateString');
            var dateOne = (moment(startDateNew).format('MM/DD/YYYY'));

            $('#datepickerStartGrid').val(dateOne);
            $('#datepickerStartGrid').datepicker("setDate", dateOne);


        }

        if ('@Model.EndDateString' != '') {

    var endDateNew = new Date('@Model.EndDateString');
    var dateTwo = (moment(endDateNew).format('MM/DD/YYYY'));

            $('#datepickerEndGrid').val(dateTwo);
            $('#datepickerEndGrid').datepicker("setDate", dateTwo);
        }

        if ('@Model.FirstShowTime' != '') {
    var timeOne = '@Model.FirstShowTime'; // Assuming '@Model.FirstShowTime' is in 'hh:mm tt' format.

    $('#timepickerFirst').val(timeOne); // Set the value of the input element

    // Initialize ClockPicker and set the time
    $('#timepickerFirst').clockpicker('show').clockpicker('pop');
}

        @*if ('@Model.SecondShowTime' != '') {

            var secondShowNew = new Date('1/1/2023 @Model.SecondShowTime');
            var timeTwo = (moment(secondShowNew).format('hh:mm A'));

            $('#timepickerSecond').val(timeTwo);
            $('#timepickerSecond').clockpicker("setDate", timeTwo);
        }*@
        if ('@Model.SecondShowTime' != '') {
    var timeTwo = '@Model.SecondShowTime';

    $('#timepickerSecond').val(timeTwo);


    $('#timepickerSecond').clockpicker('show').clockpicker('pop');
}





        if ('@Model.ThirdShowTime' != '') {
    var timeThree = '@Model.ThirdShowTime';

    $('#timepickerThird').val(timeThree);


    $('#timepickerThird').clockpicker('show').clockpicker('pop');
}



    })

</script>

@Html.ValidationSummary(true)

@using (Ajax.BeginForm("Manage", "ShowTime",
    new AjaxOptions
    {
        HttpMethod = "POST",
        InsertionMode = InsertionMode.Replace,
        UpdateTargetId = "ajax_contentMain"
    }, new { autocomplete = "off" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.MovieId, new { id = "MovieId" })


    @Html.HiddenFor(model => model.ShowTimeId, new { id = "ShowTimeId" })
    @Html.HiddenFor(model => model.StartDateString, new { id = "StartDateString" })
    @Html.HiddenFor(model => model.EndDateString, new { id = "EndDateString" })
    @Html.HiddenFor(model => model.FirstShowTime, new { id = "FirstShowTime" })
    @Html.HiddenFor(model => model.SecondShowTime, new { id = "SecondShowTime" })
    @Html.HiddenFor(model => model.ThirdShowTime, new { id = "ThirdShowTime" })



    <div class="row">
        <div class="popup-col" id="dropTitle">
            @Html.HiddenFor(model => model.MovieId, new { id = "MovieId" })
            @Html.LabelFor(model => model.Title, new { @class = "control-label" })

            @if (Model.ShowTimeId > 0)
            {
                <label>@Model.Title</label>
                @Html.HiddenFor(model => model.Title) @* To preserve the value when submitting the form *@
            }
            else
            {
                @(Html.Kendo().DropDownList()
                .Name("titleDrop")
                .OptionLabel("Select a movie")
                .DataTextField("Title")
                .DataValueField("Id")
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetMovies", "ShowTime");
                    });
                })
            )
            }

            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            <span id="errorMsgTitle">@ViewBag.msg</span>
        </div>
        <div>
            <div class="popup-col-left">
                <div data-placement="bottom" data-align="top" data-autoclose="true" style="width: 300px; float: left; padding-right: 5px; padding-top: 20px;">
                    <label><strong>Select Start Date</strong></label><br />
                    @(Html.Kendo().DatePicker()
                .Name("datepickerStartGrid")
                .Format("MM/dd/yyyy")
                .HtmlAttributes(new { style = "width: 100%", title = "datepicker" })
            )
                </div>
                <span id="errorMsgDate1">@ViewBag.msg</span>
            </div>

            <div class="popup-col-right">
                <div data-placement="bottom" data-align="top" data-autoclose="true" style="width: 300px; padding-left: 5px; padding-top: 20px; float: right">
                    <label><strong>Select End Date</strong></label><br />
                    @(Html.Kendo().DatePicker()
                .Name("datepickerEndGrid")
                .Format("MM/dd/yyyy")
                .HtmlAttributes(new { style = "width: 100%", title = "datepicker" })
            )
                </div>
                <span id="errorMsgDate2">@ViewBag.msg</span>
            </div>
        </div>


        <div class="popup-col-left">

            <div class="input-group clockpicker" data-placement="bottom" data-align="top" data-autoclose="true" style="width: 33%; padding-left: 5px; float: right; padding-top: 30px">
                <label><strong>Select Third ShowTime</strong></label><br />
                @(Html.Kendo().TimePicker()
    .Name("timepickerThird")
    .Format("hh:mm tt")
    .HtmlAttributes(new { style = "width: 100%", title = "timepicker3" })
)
            </div>
            <span id="errorMsgTime1">@ViewBag.msg</span>

            <div class="input-group clockpicker" data-placement="bottom" data-align="top" data-autoclose="true" style="width: 33%; padding-left: 5px; float: right; padding-top: 30px">
                <label><strong>Select Second ShowTime</strong></label><br />
                @(Html.Kendo().TimePicker()
                .Name("timepickerSecond")
                .Format("hh:mm tt")
                .HtmlAttributes(new { style = "width: 100%", title = "timepicker2" })
            )
            </div>
            <span id="errorMsgTime2">@ViewBag.msg</span>
            <div class="input-group clockpicker" data-placement="bottom" data-align="top" data-autoclose="true" style="width: 33%; padding-left: 5px; float: right; padding-top: 30px">
                <label><strong>Select First ShowTime</strong></label><br />
                @(Html.Kendo().TimePicker()
    .Name("timepickerFirst")
    .Format("hh:mm tt")
    .HtmlAttributes(new { style = "width: 100%", title = "timepicker1" })
)
            </div>
            <span id="errorMsgTime3">@ViewBag.msg</span>

        </div>
    </div>

    <div class="popup-col-left">
        
    </div>
    <div class="popup-col-right" style="padding-top:45px; float: right; padding-right:2px">
        <div class="form-group">
            <span id="errorMsgSpan">@ViewBag.msg</span>
            @*<input type="submit" value="Save" class="btn btn-primary" onclick="ShowTimeAlert()" />*@
            <button type="submit" class="btn btn-success" id="btn" onclick="return ShowTimeAlert()">
                @(Model.ShowTimeId == 0 ? "Create" : "Save Changes")
            </button>
        </div>
</div>
        }

        <script>
    function ShowTimeAlert() {
        
        var startDate = $('#datepickerStartGrid').val();
        var endDate = $('#datepickerEndGrid').val();
        var firstShow = $('#timepickerFirst').val();
        var secondShow = $('#timepickerSecond').val();
        var thirdShow = $('#timepickerThird').val();

        var title = $('#titleDrop').val();

        

        clearErrorMessages();

        if (title == '') {
            displayErrorMessage('Please choose a show', 'errorMsgTitle')
            return false;
        }

        if (!isValidDate(startDate)) {
            displayErrorMessage('Please enter valid start date.', 'errorMsgSpan');
            return false;
        }
        if (!isValidDate(endDate)) {
            displayErrorMessage('Please enter valid end date.', 'errorMsgSpan');
            return false;
        }
        if (new Date(startDate) > new Date(endDate)) {
            displayErrorMessage('Start date must be less than end date.', 'errorMsgSpan');
            return false;
        }

        if (!isValidTime(firstShow)) {
            displayErrorMessage('Please enter a valid first show time.', 'errorMsgSpan');
            return false;
        }

        if (!isValidTime(secondShow)) {
            displayErrorMessage('Please enter a valid second show time.', 'errorMsgSpan');
            return false;
        }

        if (!isValidTime(thirdShow)) {
            displayErrorMessage('Please enter a valid third show time.', 'errorMsgSpan');
            return false;
        }

       

       

        clearErrorMessages();
        $("#StartDateString").val(startDate);
        $("#EndDateString").val(endDate);
        $("#FirstShowTime").val(firstShow);
        $("#SecondShowTime").val(secondShow);
        $("#ThirdShowTime").val(thirdShow);
        $("#MovieId").val(title);

        return true;


    }

            function clearErrorMessages() {
                // Clear all error messages
                $('#errorMsgSpan').text('');
                $('#errorMsgTitle').text('');
                $('#errorMsgDate1').text('');
                $('#errorMsgDate2').text('');
                $('#errorMsgTime1').text('');
                $('#errorMsgTime2').text('');
                $('#errorMsgTime3').text('');

            }

            function isValidDate(dateString) {
                // Check if the date string is in MM/DD/YYYY format
                var regex = /^\d{2}\/\d{2}\/\d{4}$/;
                return regex.test(dateString);
            }

            function isValidTime(timeString) {
                // Check if the time string is in "hh:mm tt" format
                var regex = /^(1[0-2]|0?[1-9]):[0-5][0-9] [APap][mM]$/;
                return regex.test(timeString);
            }

            function displayErrorMessage(message, elementId) {
                // Display error message in red below the specified element
                $('#' + elementId).text(message).css('color', 'red');
            }


        </script>



